{"ast":null,"code":"var _jsxFileName = \"/Users/mmt9554/Documents/React/react-app/src/ApiFetch.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiFetch() {\n  _s();\n  const [fetchCountry, setFetchCountry] = useState();\n  const [inputValue, setInputValue] = useState();\n  const [error, setError] = useState('');\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const getCountry = () => {\n    fetch(`https://restcountries.com/v3.1/name/${inputValue}`).then(response => {\n      if (response.status === 404) {\n        setError(\"Country not found\");\n      }\n      return response.json();\n    }).then(country => {\n      setFetchCountry(country[0]);\n      setError();\n    }).catch(() => {\n      setError(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Country name\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: getCountry,\n      children: \"Get\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataMain\",\n      children: fetchCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataList\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 28\n          }, this), \" \", fetchCountry.name.common]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fetchCountry.flags.png,\n          alt: \"Flag\",\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(ApiFetch, \"cQmR1zKlm8WB0+RhvAav9re7qA4=\");\n_c = ApiFetch;\nexport default ApiFetch;\nvar _c;\n$RefreshReg$(_c, \"ApiFetch\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ApiFetch","_s","fetchCountry","setFetchCountry","inputValue","setInputValue","error","setError","handleInputChange","e","target","value","getCountry","fetch","then","response","status","json","country","catch","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","name","common","src","flags","png","alt","width","_c","$RefreshReg$"],"sources":["/Users/mmt9554/Documents/React/react-app/src/ApiFetch.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction ApiFetch() {\n    const [fetchCountry, setFetchCountry] = useState();\n    const [inputValue, setInputValue] = useState();\n    const [error, setError] = useState(''); \n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const getCountry = () => {\n        fetch(`https://restcountries.com/v3.1/name/${inputValue}`)\n            .then((response) => {\n                if (response.status === 404) {\n                    setError(\"Country not found\");\n                }\n                return response.json();\n            })\n            .then((country) => {\n                setFetchCountry(country[0]);\n                setError(); \n            })\n\n            .catch(() => {\n                setError(true);  \n            });\n           \n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Country name\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n               \n\n            <button type=\"button\" onClick={getCountry}>\n                Get\n            </button>\n            <p>{error}</p>\n\n\n            {/* {error ? <p>Country not found</p> : null} */}\n\n            <div className=\"dataMain\">\n                {fetchCountry && (\n                    <div className=\"dataList\">\n                        <p><strong>Name:</strong> {fetchCountry.name.common}</p>\n                        {/* <p><strong>Languages:</strong> {fetchCountry.languages ? Object.values(fetchCountry.languages).join(', ') : 'N/A'}</p> */}\n                        <img src={fetchCountry.flags.png} alt=\"Flag\" width=\"100\" />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ApiFetch;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC7BJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC,uCAAuCT,UAAU,EAAE,CAAC,CACrDU,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBT,QAAQ,CAAC,mBAAmB,CAAC;MACjC;MACA,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDH,IAAI,CAAEI,OAAO,IAAK;MACff,eAAe,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3BX,QAAQ,CAAC,CAAC;IACd,CAAC,CAAC,CAEDY,KAAK,CAAC,MAAM;MACTZ,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC;EAEV,CAAC;EAED,oBACIR,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BX,KAAK,EAAEP,UAAW;MAClBmB,QAAQ,EAAEf;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAGF5B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEhB,UAAW;MAAAQ,QAAA,EAAC;IAE3C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT5B,OAAA;MAAAqB,QAAA,EAAId;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAKd5B,OAAA;MAAK8B,SAAS,EAAC,UAAU;MAAAT,QAAA,EACpBlB,YAAY,iBACTH,OAAA;QAAK8B,SAAS,EAAC,UAAU;QAAAT,QAAA,gBACrBrB,OAAA;UAAAqB,QAAA,gBAAGrB,OAAA;YAAAqB,QAAA,EAAQ;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACzB,YAAY,CAAC4B,IAAI,CAACC,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAExD5B,OAAA;UAAKiC,GAAG,EAAE9B,YAAY,CAAC+B,KAAK,CAACC,GAAI;UAACC,GAAG,EAAC,MAAM;UAACC,KAAK,EAAC;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1B,EAAA,CAzDQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA2DjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}