{"ast":null,"code":"const Barchart = () => {\n  // set the dimensions and margins of the graph\n  var margin = {\n      top: 30,\n      right: 30,\n      bottom: 70,\n      left: 60\n    },\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Parse the Data\n  d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv\", function (data) {\n    // X axis\n    var x = d3.scaleBand().range([0, width]).domain(data.map(function (d) {\n      return d.Country;\n    })).padding(0.2);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\");\n\n    // Add Y axis\n    var y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // Bars\n    svg.selectAll(\"mybar\").data(data).enter().append(\"rect\").attr(\"x\", function (d) {\n      return x(d.Country);\n    }).attr(\"y\", function (d) {\n      return y(d.Value);\n    }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n      return height - y(d.Value);\n    }).attr(\"fill\", \"#69b3a2\");\n  });\n};\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["Barchart","margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","csv","data","x","scaleBand","range","domain","map","d","Country","padding","call","axisBottom","selectAll","style","y","scaleLinear","axisLeft","enter","Value","bandwidth","_c","$RefreshReg$"],"sources":["/Users/mmt9554/Documents/React/react-app/src/Barchart.js"],"sourcesContent":["const Barchart = () => {\n  // set the dimensions and margins of the graph\n  var margin = { top: 30, right: 30, bottom: 70, left: 60 },\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  var svg = d3\n    .select(\"#my_dataviz\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Parse the Data\n  d3.csv(\n    \"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv\",\n    function (data) {\n      // X axis\n      var x = d3\n        .scaleBand()\n        .range([0, width])\n        .domain(\n          data.map(function (d) {\n            return d.Country;\n          })\n        )\n        .padding(0.2);\n      svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n\n      // Add Y axis\n      var y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      // Bars\n      svg\n        .selectAll(\"mybar\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", function (d) {\n          return x(d.Country);\n        })\n        .attr(\"y\", function (d) {\n          return y(d.Value);\n        })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) {\n          return height - y(d.Value);\n        })\n        .attr(\"fill\", \"#69b3a2\");\n    }\n  );\n};\n\nexport default Barchart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}