{"ast":null,"code":"var _jsxFileName = \"/Users/mmt9554/Documents/React/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Contact from './Contact';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const fruits = ['Apple', 'Banana', 'Orange', 'Mango'];\n\n  const [nationData, setNationData] = useState([]);\n  function fetchData() {\n    fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\").then(response => response.json()).then(data => {\n      setNationData(data.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), nationData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Nation: (\", data.Nation, \") Population: \", data.Population, \", Year: \", data.Year, \",\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"imWjSc0ohDejarYInCmoByi1cAc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Contact","useState","jsxDEV","_jsxDEV","App","_s","nationData","setNationData","fetchData","fetch","then","response","json","data","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","className","Nation","Population","Year","_c","$RefreshReg$"],"sources":["/Users/mmt9554/Documents/React/react-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Contact from './Contact';\nimport { useState } from 'react';\n\nfunction App() {\n\n  // const fruits = ['Apple', 'Banana', 'Orange', 'Mango'];\n\n\n\n  const [nationData, setNationData] = useState([]);\n\n\n\n\n  function fetchData() {\n\n    fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\").\n      then((response) => response.json())\n      .then((data) => { setNationData(data.data) });\n  }\n\n\n\n  return (\n    <div>\n\n    \n\n\n      <button onClick={fetchData}>click me</button>\n\n     \n        {nationData.map((data, index) => (\n          <div className='data' key={index}>\n           <div>\n           Nation: ({data.Nation})\n             Population: {data.Population}, \n            Year: {data.Year}, \n\n            </div>\n           \n           \n          </div>\n        ))}\n\n\n\n      {/* <Contact /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;;EAIA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAKhD,SAASO,SAASA,CAAA,EAAG;IAEnBC,KAAK,CAAC,mEAAmE,CAAC,CACxEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAClCF,IAAI,CAAEG,IAAI,IAAK;MAAEN,aAAa,CAACM,IAAI,CAACA,IAAI,CAAC;IAAC,CAAC,CAAC;EACjD;EAIA,oBACEV,OAAA;IAAAW,QAAA,gBAKEX,OAAA;MAAQY,OAAO,EAAEP,SAAU;MAAAM,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG1Cb,UAAU,CAACc,GAAG,CAAC,CAACP,IAAI,EAAEQ,KAAK,kBAC1BlB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAR,QAAA,eACpBX,OAAA;QAAAW,QAAA,GAAK,WACI,EAACD,IAAI,CAACU,MAAM,EAAC,gBACR,EAACV,IAAI,CAACW,UAAU,EAAC,UACxB,EAACX,IAAI,CAACY,IAAI,EAAC,GAEjB;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GANmBE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAS3B,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMD,CAAC;AAEV;AAACd,EAAA,CAhDQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}