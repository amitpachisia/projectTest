{"ast":null,"code":"import { CubejsApi } from '@cubejs-client/core';\nconst apiUrl = 'https://heavy-lansford.gcp-us-central1.cubecloudapp.dev/cubejs-api/v1';\nconst cubeToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjEwMDAwMDAwMDAsImV4cCI6NTAwMDAwMDAwMH0.OHZOpOBVKr-sCwn8sbZ5UFsqI3uCs6e4omT7P6WVMFw';\nconst cubeApi = new CubejsApi(cubeToken, {\n  apiUrl\n});\nexport async function getAquisitionsByYear() {\n  const acquisitionsByYearQuery = {\n    dimensions: ['Artworks.yearAcquired'],\n    measures: ['Artworks.count'],\n    filters: [{\n      member: 'Artworks.yearAcquired',\n      operator: 'set'\n    }],\n    order: {\n      'Artworks.yearAcquired': 'asc'\n    }\n  };\n  const resultSet = await cubeApi.load(acquisitionsByYearQuery);\n  return resultSet.tablePivot().map(row => ({\n    year: parseInt(row['Artworks.yearAcquired']),\n    count: parseInt(row['Artworks.count'])\n  }));\n}\nexport async function getDimensions() {\n  const dimensionsQuery = {\n    dimensions: ['Artworks.widthCm', 'Artworks.heightCm'],\n    measures: ['Artworks.count'],\n    filters: [{\n      member: 'Artworks.classification',\n      operator: 'equals',\n      values: ['Painting']\n    }, {\n      member: 'Artworks.widthCm',\n      operator: 'set'\n    }, {\n      member: 'Artworks.widthCm',\n      operator: 'lt',\n      values: ['500']\n    }, {\n      member: 'Artworks.heightCm',\n      operator: 'set'\n    }, {\n      member: 'Artworks.heightCm',\n      operator: 'lt',\n      values: ['500']\n    }]\n  };\n  const resultSet = await cubeApi.load(dimensionsQuery);\n  return resultSet.tablePivot().map(row => ({\n    width: parseInt(row['Artworks.widthCm']),\n    height: parseInt(row['Artworks.heightCm']),\n    count: parseInt(row['Artworks.count'])\n  }));\n}","map":{"version":3,"names":["CubejsApi","apiUrl","cubeToken","cubeApi","getAquisitionsByYear","acquisitionsByYearQuery","dimensions","measures","filters","member","operator","order","resultSet","load","tablePivot","map","row","year","parseInt","count","getDimensions","dimensionsQuery","values","width","height"],"sources":["/Users/mmt9554/Documents/React/react-app/src/MyLineChart.js"],"sourcesContent":["import { CubejsApi } from '@cubejs-client/core';\n\nconst apiUrl = 'https://heavy-lansford.gcp-us-central1.cubecloudapp.dev/cubejs-api/v1';\nconst cubeToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjEwMDAwMDAwMDAsImV4cCI6NTAwMDAwMDAwMH0.OHZOpOBVKr-sCwn8sbZ5UFsqI3uCs6e4omT7P6WVMFw';\n\nconst cubeApi = new CubejsApi(cubeToken, { apiUrl });\n\nexport async function getAquisitionsByYear() {\n  const acquisitionsByYearQuery = {\n    dimensions: [\n      'Artworks.yearAcquired',\n    ],\n    measures: [\n      'Artworks.count'\n    ],\n    filters: [ {\n      member: 'Artworks.yearAcquired',\n      operator: 'set'\n    } ],\n    order: {\n      'Artworks.yearAcquired': 'asc'\n    }\n  };\n\n  const resultSet = await cubeApi.load(acquisitionsByYearQuery);\n\n  return resultSet.tablePivot().map(row => ({\n    year: parseInt(row['Artworks.yearAcquired']),\n    count: parseInt(row['Artworks.count'])\n  }));\n}\n\nexport async function getDimensions() {\n  const dimensionsQuery = {\n    dimensions: [\n      'Artworks.widthCm',\n      'Artworks.heightCm'\n    ],\n    measures: [\n      'Artworks.count'\n    ],\n    filters: [\n      {\n        member: 'Artworks.classification',\n        operator: 'equals',\n        values: [ 'Painting' ]\n      },\n      {\n        member: 'Artworks.widthCm',\n        operator: 'set'\n      },\n      {\n        member: 'Artworks.widthCm',\n        operator: 'lt',\n        values: [ '500' ]\n      },\n      {\n        member: 'Artworks.heightCm',\n        operator: 'set'\n      },\n      {\n        member: 'Artworks.heightCm',\n        operator: 'lt',\n        values: [ '500' ]\n      }\n    ]\n  };\n\n  const resultSet = await cubeApi.load(dimensionsQuery);\n\n  return resultSet.tablePivot().map(row => ({\n    width: parseInt(row['Artworks.widthCm']),\n    height: parseInt(row['Artworks.heightCm']),\n    count: parseInt(row['Artworks.count'])\n  }));\n}\n "],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAE/C,MAAMC,MAAM,GAAG,uEAAuE;AACtF,MAAMC,SAAS,GAAG,kIAAkI;AAEpJ,MAAMC,OAAO,GAAG,IAAIH,SAAS,CAACE,SAAS,EAAE;EAAED;AAAO,CAAC,CAAC;AAEpD,OAAO,eAAeG,oBAAoBA,CAAA,EAAG;EAC3C,MAAMC,uBAAuB,GAAG;IAC9BC,UAAU,EAAE,CACV,uBAAuB,CACxB;IACDC,QAAQ,EAAE,CACR,gBAAgB,CACjB;IACDC,OAAO,EAAE,CAAE;MACTC,MAAM,EAAE,uBAAuB;MAC/BC,QAAQ,EAAE;IACZ,CAAC,CAAE;IACHC,KAAK,EAAE;MACL,uBAAuB,EAAE;IAC3B;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAMT,OAAO,CAACU,IAAI,CAACR,uBAAuB,CAAC;EAE7D,OAAOO,SAAS,CAACE,UAAU,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,KAAK;IACxCC,IAAI,EAAEC,QAAQ,CAACF,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAC5CG,KAAK,EAAED,QAAQ,CAACF,GAAG,CAAC,gBAAgB,CAAC;EACvC,CAAC,CAAC,CAAC;AACL;AAEA,OAAO,eAAeI,aAAaA,CAAA,EAAG;EACpC,MAAMC,eAAe,GAAG;IACtBf,UAAU,EAAE,CACV,kBAAkB,EAClB,mBAAmB,CACpB;IACDC,QAAQ,EAAE,CACR,gBAAgB,CACjB;IACDC,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,yBAAyB;MACjCC,QAAQ,EAAE,QAAQ;MAClBY,MAAM,EAAE,CAAE,UAAU;IACtB,CAAC,EACD;MACEb,MAAM,EAAE,kBAAkB;MAC1BC,QAAQ,EAAE;IACZ,CAAC,EACD;MACED,MAAM,EAAE,kBAAkB;MAC1BC,QAAQ,EAAE,IAAI;MACdY,MAAM,EAAE,CAAE,KAAK;IACjB,CAAC,EACD;MACEb,MAAM,EAAE,mBAAmB;MAC3BC,QAAQ,EAAE;IACZ,CAAC,EACD;MACED,MAAM,EAAE,mBAAmB;MAC3BC,QAAQ,EAAE,IAAI;MACdY,MAAM,EAAE,CAAE,KAAK;IACjB,CAAC;EAEL,CAAC;EAED,MAAMV,SAAS,GAAG,MAAMT,OAAO,CAACU,IAAI,CAACQ,eAAe,CAAC;EAErD,OAAOT,SAAS,CAACE,UAAU,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,KAAK;IACxCO,KAAK,EAAEL,QAAQ,CAACF,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACxCQ,MAAM,EAAEN,QAAQ,CAACF,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC1CG,KAAK,EAAED,QAAQ,CAACF,GAAG,CAAC,gBAAgB,CAAC;EACvC,CAAC,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}