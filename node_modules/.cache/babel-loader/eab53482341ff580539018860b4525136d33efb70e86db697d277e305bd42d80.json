{"ast":null,"code":"var _jsxFileName = \"/Users/mmt9554/Documents/React/react-app/src/ApiFetch.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiFetch() {\n  _s();\n  const [fetchCountry, setCountry] = useState([]);\n  function clickSearch() {\n    fetch(\"https://restcountries.com/v3.1/name/France\").then(response => response.json()).then(data => {\n      setCountry(data.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"country name\",\n      value: clickSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: clickSearch,\n      children: \"Get\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataMain\",\n      children: fetchCountry.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataList\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 16\n          }, this), \" (\", country.common, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ApiFetch, \"53PTSrc/7Px00PFYkunPOYt2R5o=\");\n_c = ApiFetch;\nexport default ApiFetch;\nvar _c;\n$RefreshReg$(_c, \"ApiFetch\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","ApiFetch","_s","fetchCountry","setCountry","clickSearch","fetch","then","response","json","data","children","type","placeholder","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","country","index","common","_c","$RefreshReg$"],"sources":["/Users/mmt9554/Documents/React/react-app/src/ApiFetch.js"],"sourcesContent":["import logo from './logo.svg';\nimport { useState } from 'react';\n\nfunction ApiFetch() {\n\n \n\n    const [fetchCountry, setCountry] = useState([]);\n\n\n  function clickSearch() {\n\n    fetch(\"https://restcountries.com/v3.1/name/France\").\n      then((response) => response.json())\n      .then((data) => { setCountry(data.data) });\n  }\n\n\n\n  return (\n    <div>\n\n      <input type=\"text\"  placeholder=\"country name\" value={clickSearch} />\n      <button type='button' onClick={clickSearch}>Get</button>\n\n      <div className='dataMain'>\n      {fetchCountry.map((country, index) => (\n      <div className='dataList' key={index}>\n         \n           <p> <strong>Name:</strong> ({country.common})</p>\n          \n          </div>\n\n      ))}\n\n</div>\n\n\n\n    </div>\n  );\n}\n\nexport default ApiFetch;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAIhB,MAAM,CAACC,YAAY,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAGjD,SAASO,WAAWA,CAAA,EAAG;IAErBC,KAAK,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAClCF,IAAI,CAAEG,IAAI,IAAK;MAAEN,UAAU,CAACM,IAAI,CAACA,IAAI,CAAC;IAAC,CAAC,CAAC;EAC9C;EAIA,oBACEV,OAAA;IAAAW,QAAA,gBAEEX,OAAA;MAAOY,IAAI,EAAC,MAAM;MAAEC,WAAW,EAAC,cAAc;MAACC,KAAK,EAAET;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrElB,OAAA;MAAQY,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEd,WAAY;MAAAM,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExDlB,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAAAT,QAAA,EACxBR,YAAY,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjCvB,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAAAT,QAAA,eAEpBX,OAAA;UAAAW,QAAA,GAAG,GAAC,eAAAX,OAAA;YAAAW,QAAA,EAAQ;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,EAACI,OAAO,CAACE,MAAM,EAAC,GAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,GAFvBK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI3B,CAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIG,CAAC;AAEV;AAAChB,EAAA,CAtCQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}