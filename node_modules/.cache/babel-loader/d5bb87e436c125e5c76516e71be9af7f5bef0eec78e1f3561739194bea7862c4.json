{"ast":null,"code":"var _jsxFileName = \"/Users/mmt9554/Documents/React/react-app/src/ApiFetch.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiFetch() {\n  _s();\n  const [fetchCountry, setCountry] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [displayValue, setDisplayValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const getCountry = () => {\n    clickSearch(inputValue);\n  };\n  function clickSearch() {\n    fetch(\"https://restcountries.com/v3.1/name/${clickSearch}\").then(response => response.json()).then(country => {\n      setCountry(country.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Country name\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: getCountry,\n      children: \"Get\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataMain\",\n      children: fetchCountry.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataList\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this), \" \", country.name.common]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Official Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 28\n          }, this), \" \", country.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Capital:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 28\n          }, this), \" \", country.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Region:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 28\n          }, this), \" \", country.region]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(ApiFetch, \"6C/r/vCnWTNOE/1clZBFd+DDVwg=\");\n_c = ApiFetch;\nexport default ApiFetch;\nvar _c;\n$RefreshReg$(_c, \"ApiFetch\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ApiFetch","_s","fetchCountry","setCountry","inputValue","setInputValue","displayValue","setDisplayValue","handleInputChange","event","target","value","getCountry","clickSearch","fetch","then","response","json","country","data","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","index","name","common","capital","region","_c","$RefreshReg$"],"sources":["/Users/mmt9554/Documents/React/react-app/src/ApiFetch.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction ApiFetch() {\n    const [fetchCountry, setCountry] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [displayValue, setDisplayValue] = useState('');\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const getCountry = () => {\n       \n        clickSearch(inputValue); \n    };\n\n    function clickSearch() {\n\n        fetch(\"https://restcountries.com/v3.1/name/${clickSearch}\").\n            then((response) => response.json())\n            .then((country) => { setCountry(country.data) });\n    }\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Country name\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n            <button type=\"button\" onClick={getCountry}>\n                Get\n            </button>\n\n            {/* <p>{displayValue}</p> */}\n\n            <div className='dataMain'>\n                {fetchCountry.map((country, index) => (\n                    <div className='dataList' key={index}>\n                        <p><strong>Name:</strong> {country.name.common}</p>\n                       \n                        <p><strong>Official Name:</strong> {country.name}</p>\n                        <p><strong>Capital:</strong> {country.capital}</p>\n                        <p><strong>Region:</strong> {country.region}</p>\n                      \n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default ApiFetch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}